{"name":"Mediacapture in WPF","tagline":"Camera preview in WPF Desktop apps using WinRT MediaCapture","body":"[![Build status](https://ci.appveyor.com/api/projects/status/e8oe4ihb3f4it8k5?svg=true)](https://ci.appveyor.com/project/mmaitre314/mediacapturewpf)\r\n[![NuGet package](http://mmaitre314.github.io/images/nuget.png)](https://www.nuget.org/packages/MMaitre.MediaCaptureWPF/)\r\n[![Symbols](http://mmaitre314.github.io/images/Symbols.png)](http://mmaitre314.github.io/2015/05/24/personal-pdb-symbol-server.html)\r\n\r\n\r\n`CameraPreview` allows previewing the camera video stream of the WinRT [MediaCapture](https://msdn.microsoft.com/en-us/library/windows/apps/windows.media.capture.mediacapture.aspx) API in Desktop WPF apps.\r\n\r\n![Preview](http://mmaitre314.github.io/images/WPFCameraPreview.jpg)\r\n\r\n`CameraPreview` derives from [D3DImage](https://msdn.microsoft.com/en-us/library/system.windows.interop.d3dimage(v=vs.110).aspx) and can be used anywhere a GPU-accelerated [ImageSource](https://msdn.microsoft.com/en-us/library/system.windows.media.imagesource(v=vs.110).aspx) can be. For instance, inside an `<Image>` XAML element:\r\n\r\n```XML\r\n<Grid>\r\n    <Image Name=\"Preview\"/>\r\n</Grid>\r\n```\r\n\r\nThe C# code behind creates `MediaCapture`, initializes it, and passes it to `CameraPreview`. This object is then set as source of the `<Image>` element and preview is started.\r\n\r\n```C#\r\nvar capture = new MediaCapture();\r\nawait capture.InitializeAsync();\r\n\r\nvar preview = new CapturePreview(capture);\r\nPreview.Source = preview;\r\nawait preview.StartAsync();\r\n```\r\n\r\n# References\r\n\r\n- CodeProject: [Introduction to D3DImage](http://www.codeproject.com/Articles/28526/Introduction-to-D-DImage)\r\n- MSDN: [D3DImage](https://msdn.microsoft.com/en-us/library/system.windows.interop.d3dimage(v=vs.110).aspx)\r\n- GitHub: [Camera Starter Kit](https://github.com/Microsoft/Windows-universal-samples/tree/master/CameraStarterKit)\r\n- Blogs: \r\n  - [Direct3D 10/11 & Direct2D in WPF](http://jmorrill.hjtcentral.com/Home/tabid/428/EntryId/437/Direct3D-10-11-Direct2D-in-WPF.aspx)\r\n  - [C++/CLI Cheat Sheet](http://manski.net/2011/04/cpp-cli-cheat-sheet/)\r\n  - [Media WinRT APIs in Desktop apps](http://mmaitre314.github.io/2015/02/01/using-the-winrt-media-apis-to-encode-audio-in-desktop-cs-apps.html)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}